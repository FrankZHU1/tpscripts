{"version":3,"sources":["../../src/rules/validTypes.js"],"names":["isLink","tag","test","jsdoc","report","_","forEach","tags","type","error","name"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;AACA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAS;AACtB,SAAO,2CAA2CC,IAA3C,CAAgDD,GAAhD,CAAP;AACD,CAFD;;eAIe,2BAAa,gBAGtB;AAAA,MAFJE,KAEI,QAFJA,KAEI;AAAA,MADJC,MACI,QADJA,MACI;;AACJC,kBAAEC,OAAF,CAAUH,KAAK,CAACI,IAAhB,EAAsB,UAACN,GAAD,EAAS;AAC7B,QAAIA,GAAG,CAACO,IAAJ,IAAY,CAACR,MAAM,CAACC,GAAG,CAACO,IAAL,CAAvB,EAAmC;AACjC,UAAI;AACF,oCAAMP,GAAG,CAACO,IAAV;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACd,YAAIA,KAAK,CAACC,IAAN,KAAe,aAAnB,EAAkC;AAChCN,UAAAA,MAAM,CAAC,2BAA2BH,GAAG,CAACO,IAAhC,EAAsC,IAAtC,EAA4CP,GAA5C,CAAN;AACD;AACF;AACF;AACF,GAVD;AAWD,CAfc,C","sourcesContent":["import _ from 'lodash';\nimport {parse} from 'jsdoctypeparser';\nimport iterateJsdoc from '../iterateJsdoc';\n\n/** @param {string} tag */\nconst isLink = (tag) => {\n  return /^(@link|@linkcode|@linkplain|@tutorial) /.test(tag);\n};\n\nexport default iterateJsdoc(({\n  jsdoc,\n  report\n}) => {\n  _.forEach(jsdoc.tags, (tag) => {\n    if (tag.type && !isLink(tag.type)) {\n      try {\n        parse(tag.type);\n      } catch (error) {\n        if (error.name === 'SyntaxError') {\n          report('Syntax error in type: ' + tag.type, null, tag);\n        }\n      }\n    }\n  });\n});\n"],"file":"validTypes.js"}